/* Auto-generated by genmsg_cpp for file /home/gaurav/ros_tutorials/Inverse-Kinematics/PathPlanner/srv/configService.srv */
#ifndef PATHPLANNER_SERVICE_CONFIGSERVICE_H
#define PATHPLANNER_SERVICE_CONFIGSERVICE_H
#include <string>
#include <vector>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/message.h"
#include "ros/time.h"

#include "ros/service_traits.h"




namespace PathPlanner
{
template <class ContainerAllocator>
struct configServiceRequest_ : public ros::Message
{
  typedef configServiceRequest_<ContainerAllocator> Type;

  configServiceRequest_()
  : command(0)
  {
  }

  configServiceRequest_(const ContainerAllocator& _alloc)
  : command(0)
  {
  }

  typedef int64_t _command_type;
  int64_t command;


private:
  static const char* __s_getDataType_() { return "PathPlanner/configServiceRequest"; }
public:
  ROS_DEPRECATED static const std::string __s_getDataType() { return __s_getDataType_(); }

  ROS_DEPRECATED const std::string __getDataType() const { return __s_getDataType_(); }

private:
  static const char* __s_getMD5Sum_() { return "856b30ed20a04e555abc88aa6a08af67"; }
public:
  ROS_DEPRECATED static const std::string __s_getMD5Sum() { return __s_getMD5Sum_(); }

  ROS_DEPRECATED const std::string __getMD5Sum() const { return __s_getMD5Sum_(); }

private:
  static const char* __s_getServerMD5Sum_() { return "a3b12d0e4c8f2674ae7b0290682c99e1"; }
public:
  ROS_DEPRECATED static const std::string __s_getServerMD5Sum() { return __s_getServerMD5Sum_(); }

  ROS_DEPRECATED const std::string __getServerMD5Sum() const { return __s_getServerMD5Sum_(); }

private:
  static const char* __s_getMessageDefinition_() { return "int64 command\n\
\n\
"; }
public:
  ROS_DEPRECATED static const std::string __s_getMessageDefinition() { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED const std::string __getMessageDefinition() const { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED virtual uint8_t *serialize(uint8_t *write_ptr, uint32_t seq) const
  {
    ros::serialization::OStream stream(write_ptr, 1000000000);
    ros::serialization::serialize(stream, command);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    ros::serialization::IStream stream(read_ptr, 1000000000);
    ros::serialization::deserialize(stream, command);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint32_t serializationLength() const
  {
    uint32_t size = 0;
    size += ros::serialization::serializationLength(command);
    return size;
  }

  typedef boost::shared_ptr< ::PathPlanner::configServiceRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::PathPlanner::configServiceRequest_<ContainerAllocator>  const> ConstPtr;
}; // struct configServiceRequest
typedef  ::PathPlanner::configServiceRequest_<std::allocator<void> > configServiceRequest;

typedef boost::shared_ptr< ::PathPlanner::configServiceRequest> configServiceRequestPtr;
typedef boost::shared_ptr< ::PathPlanner::configServiceRequest const> configServiceRequestConstPtr;


template <class ContainerAllocator>
struct configServiceResponse_ : public ros::Message
{
  typedef configServiceResponse_<ContainerAllocator> Type;

  configServiceResponse_()
  : number(0)
  {
  }

  configServiceResponse_(const ContainerAllocator& _alloc)
  : number(0)
  {
  }

  typedef int64_t _number_type;
  int64_t number;


private:
  static const char* __s_getDataType_() { return "PathPlanner/configServiceResponse"; }
public:
  ROS_DEPRECATED static const std::string __s_getDataType() { return __s_getDataType_(); }

  ROS_DEPRECATED const std::string __getDataType() const { return __s_getDataType_(); }

private:
  static const char* __s_getMD5Sum_() { return "2a1b249ff0900a6eb941a743f359017a"; }
public:
  ROS_DEPRECATED static const std::string __s_getMD5Sum() { return __s_getMD5Sum_(); }

  ROS_DEPRECATED const std::string __getMD5Sum() const { return __s_getMD5Sum_(); }

private:
  static const char* __s_getServerMD5Sum_() { return "a3b12d0e4c8f2674ae7b0290682c99e1"; }
public:
  ROS_DEPRECATED static const std::string __s_getServerMD5Sum() { return __s_getServerMD5Sum_(); }

  ROS_DEPRECATED const std::string __getServerMD5Sum() const { return __s_getServerMD5Sum_(); }

private:
  static const char* __s_getMessageDefinition_() { return "int64 number\n\
\n\
"; }
public:
  ROS_DEPRECATED static const std::string __s_getMessageDefinition() { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED const std::string __getMessageDefinition() const { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED virtual uint8_t *serialize(uint8_t *write_ptr, uint32_t seq) const
  {
    ros::serialization::OStream stream(write_ptr, 1000000000);
    ros::serialization::serialize(stream, number);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    ros::serialization::IStream stream(read_ptr, 1000000000);
    ros::serialization::deserialize(stream, number);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint32_t serializationLength() const
  {
    uint32_t size = 0;
    size += ros::serialization::serializationLength(number);
    return size;
  }

  typedef boost::shared_ptr< ::PathPlanner::configServiceResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::PathPlanner::configServiceResponse_<ContainerAllocator>  const> ConstPtr;
}; // struct configServiceResponse
typedef  ::PathPlanner::configServiceResponse_<std::allocator<void> > configServiceResponse;

typedef boost::shared_ptr< ::PathPlanner::configServiceResponse> configServiceResponsePtr;
typedef boost::shared_ptr< ::PathPlanner::configServiceResponse const> configServiceResponseConstPtr;

struct configService
{

typedef configServiceRequest Request;
typedef configServiceResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct configService
} // namespace PathPlanner

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator>
struct MD5Sum< ::PathPlanner::configServiceRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "856b30ed20a04e555abc88aa6a08af67";
  }

  static const char* value(const  ::PathPlanner::configServiceRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x856b30ed20a04e55ULL;
  static const uint64_t static_value2 = 0x5abc88aa6a08af67ULL;
};

template<class ContainerAllocator>
struct DataType< ::PathPlanner::configServiceRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "PathPlanner/configServiceRequest";
  }

  static const char* value(const  ::PathPlanner::configServiceRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::PathPlanner::configServiceRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "int64 command\n\
\n\
";
  }

  static const char* value(const  ::PathPlanner::configServiceRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::PathPlanner::configServiceRequest_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator>
struct MD5Sum< ::PathPlanner::configServiceResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "2a1b249ff0900a6eb941a743f359017a";
  }

  static const char* value(const  ::PathPlanner::configServiceResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x2a1b249ff0900a6eULL;
  static const uint64_t static_value2 = 0xb941a743f359017aULL;
};

template<class ContainerAllocator>
struct DataType< ::PathPlanner::configServiceResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "PathPlanner/configServiceResponse";
  }

  static const char* value(const  ::PathPlanner::configServiceResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::PathPlanner::configServiceResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "int64 number\n\
\n\
";
  }

  static const char* value(const  ::PathPlanner::configServiceResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::PathPlanner::configServiceResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::PathPlanner::configServiceRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.command);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct configServiceRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::PathPlanner::configServiceResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.number);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct configServiceResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<PathPlanner::configService> {
  static const char* value() 
  {
    return "a3b12d0e4c8f2674ae7b0290682c99e1";
  }

  static const char* value(const PathPlanner::configService&) { return value(); } 
};

template<>
struct DataType<PathPlanner::configService> {
  static const char* value() 
  {
    return "PathPlanner/configService";
  }

  static const char* value(const PathPlanner::configService&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<PathPlanner::configServiceRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "a3b12d0e4c8f2674ae7b0290682c99e1";
  }

  static const char* value(const PathPlanner::configServiceRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<PathPlanner::configServiceRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "PathPlanner/configService";
  }

  static const char* value(const PathPlanner::configServiceRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<PathPlanner::configServiceResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "a3b12d0e4c8f2674ae7b0290682c99e1";
  }

  static const char* value(const PathPlanner::configServiceResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<PathPlanner::configServiceResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "PathPlanner/configService";
  }

  static const char* value(const PathPlanner::configServiceResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // PATHPLANNER_SERVICE_CONFIGSERVICE_H

